import{_ as s,o as n,c as a,U as e}from"./chunks/framework.44f5cba5.js";const C=JSON.parse('{"title":"Invert Binary Tree","description":"","frontmatter":{},"headers":[],"relativePath":"Tree/226.md","filePath":"Tree/226.md","lastUpdated":1700908249000}'),l={name:"Tree/226.md"},p=e(`<h1 id="invert-binary-tree" tabindex="-1">Invert Binary Tree <a class="header-anchor" href="#invert-binary-tree" aria-label="Permalink to &quot;Invert Binary Tree&quot;">​</a></h1><p><a href="https://leetcode.com/problems/invert-binary-tree/" target="_blank" rel="noreferrer">leetcode 226. Invert Binary Tree</a></p><h2 id="depth-first-search" tabindex="-1">Depth-First Search <a class="header-anchor" href="#depth-first-search" aria-label="Permalink to &quot;Depth-First Search&quot;">​</a></h2><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">TreeNode</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">invertTree</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">invert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">invert</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">swap</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">invert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">invert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">            </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,4),o=[p];function r(t,c,i,y,D,F){return n(),a("div",null,o)}const d=s(l,[["render",r]]);export{C as __pageData,d as default};
