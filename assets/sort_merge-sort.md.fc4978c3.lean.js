import{_ as a,c as l,b as s,d as p,t as o,a as e,o as r}from"./app.fac8a78d.js";const d=JSON.parse('{"title":"Merge Sort","description":"merge sort implementation","frontmatter":{"title":"Merge Sort","editLink":true,"description":"merge sort implementation"},"headers":[{"level":2,"title":"Assumption : Doing this Problem","slug":"assumption-doing-this-problem"},{"level":2,"title":"Intuition","slug":"intuition"},{"level":3,"title":"What is merge?","slug":"what-is-merge"},{"level":3,"title":"What is Merge Sort","slug":"what-is-merge-sort"},{"level":2,"title":"Code","slug":"code"},{"level":3,"title":"Iterative Approach","slug":"iterative-approach"},{"level":3,"title":"Iterator Approach","slug":"iterator-approach"},{"level":2,"title":"Complexity Analysis","slug":"complexity-analysis"},{"level":2,"title":"Put your skill into Practice","slug":"put-your-skill-into-practice"}],"relativePath":"sort/merge-sort.md","lastUpdated":1658585401000}'),t={name:"sort/merge-sort.md"},c={id:"frontmatter-title",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),F=e("",29);function y(n,A,C,i,b,m){return r(),l("div",null,[s("h1",c,[p(o(n.$frontmatter.title)+" ",1),D]),F])}var h=a(t,[["render",y]]);export{d as __pageData,h as default};
